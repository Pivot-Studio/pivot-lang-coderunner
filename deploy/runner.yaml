apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: runner
  namespace: lang
  annotations:
    acme.cert-manager.io/http01-edit-in-place: 'true'
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: 'false'
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/limit-connections: '60'
    nginx.ingress.kubernetes.io/limit-rps: '60'
    nginx.ingress.kubernetes.io/use-regex: 'true'
spec:
  rules:
    - host: code.lang.pivotstudio.cn
      http:
        paths:
          - backend:
              service:
                name: runner
                port:
                  number: 8080
            path: /
            pathType: Prefix
  tls:
  - secretName: runner-tls-cert
    hosts:
      - code.lang.pivotstudio.cn

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: runner
  name: runner
  namespace: lang
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    app: runner-backend
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: runner-backend
  name: runner-backend
  namespace: lang
spec:
  replicas: 1
  selector:
    matchLabels:
      app: runner-backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: runner-backend
    spec:
      imagePullSecrets:
        - name: harbor-config
      # priorityClassName: high-priority
      containers:
        - image: harbor.pivotstudio.cn/pivot-lang/runner:{{.build_tag}}  # build_tag不是变量，不需要改
          name: runner-backend
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 1000m # 可自定义
              memory: 300Mi # 可自定义
            requests:
              cpu: 100m # 可自定义
              memory: 100Mi # 可自定义
      restartPolicy: Always
status: {}